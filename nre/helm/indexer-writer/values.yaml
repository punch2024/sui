# Default values for indexer-writer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

command: ["/usr/local/bin/sui-indexer"]
args: ["--db-url", "$(DB_URL)", "--rpc-client-url", "$(RPC_CLIENT)", "--remote-store-url", "https://checkpoints.mainnet.sui.io", "--fullnode-sync-worker"]


# there is only a single indexer-writer deployment expected for normal operation
replicaCount: 1

image:
  repository: "mysten/sui-indexer"
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "sui-v1.25.0-release"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  RUST_BACKTRACE:
    value: "1"
  RUST_LOG:
    value: "info,jsonrpsee=error,jsonrpsee_types=error"
  RUST_JSON_LOG:
    value: "true"
  DB_CONNECTION_TIMEOUT:
    value: "3600"
  DB_STATEMENT_TIMEOUT:
    value: "3600"
  CHECKPOINT_COMIT_BATCH_SIZE:
    value: "300"
  RPC_URL: 
    value: "https://public-rpc.mainnet.sui.io" # you will want to point this to a local fullnode instance like http://<servicename>.<namespace>.svc.cluster.local:900
  DB_URL:
    valueFrom:
      secretKeyRef:
        name: "indexer-writer-db-secret"
        key: "db-url"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"


podAnnotations:
  prometheus.io/path: "/metrics"
  prometheus.io/port: "9184"
  prometheus.io/scrape: "true"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#livenessProbe:
#  httpGet:
#    path: /
#    port: http
#readinessProbe:
#  httpGet:
#    path: /
#    port: http

# rollout strategy
strategy:
  rollingUpdate:
    maxSurge: 25%

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: sui-indexer.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


nodeSelector: {}

tolerations: []

affinity: {}
