warning[Lint W00003]: 
  ┌─ tests/custom_rules/combinable_bool.move:7:13
  │
7 │         if (x < y || x == y) {}; // should be x <= y
  │             ^^^^^^^^^^^^^^^ Consider simplifying to `<=`.
  │
  = This warning can be suppressed with '#[allow(lint(combinable_bool_conditions))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W00003]: 
  ┌─ tests/custom_rules/combinable_bool.move:8:13
  │
8 │         if (x == y || x > y) {}; // should be x >= y
  │             ^^^^^^^^^^^^^^^ Consider simplifying to `>=`.
  │
  = This warning can be suppressed with '#[allow(lint(combinable_bool_conditions))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W00003]: 
  ┌─ tests/custom_rules/combinable_bool.move:9:13
  │
9 │         if (x > y || x == y) {}; // should be x >= y
  │             ^^^^^^^^^^^^^^^ Consider simplifying to `>=`.
  │
  = This warning can be suppressed with '#[allow(lint(combinable_bool_conditions))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W00003]: 
   ┌─ tests/custom_rules/combinable_bool.move:16:13
   │
16 │         if (m == n || m < n) {}; // should be m <= n
   │             ^^^^^^^^^^^^^^^ Consider simplifying to `<=`.
   │
   = This warning can be suppressed with '#[allow(lint(combinable_bool_conditions))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W00003]: 
   ┌─ tests/custom_rules/combinable_bool.move:23:13
   │
23 │         if (x == 11 || x < 11) {};
   │             ^^^^^^^^^^^^^^^^^ Consider simplifying to `<=`.
   │
   = This warning can be suppressed with '#[allow(lint(combinable_bool_conditions))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

